// Mocks generated by Mockito 5.4.6 from annotations
// in challenge_pinapp/test/data/repositories/post_repository/post_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:challenge_pinapp/data/data_sources/interfaces/i_post_remote_data_source.dart'
    as _i2;
import 'package:challenge_pinapp/data/data_sources/interfaces/i_posts_local_data_source.dart'
    as _i5;
import 'package:challenge_pinapp/data/dtos/post_dto.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [IPostRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIPostRemoteDataSource extends _i1.Mock
    implements _i2.IPostRemoteDataSource {
  MockIPostRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.PostDTO>> getPosts() =>
      (super.noSuchMethod(
            Invocation.method(#getPosts, []),
            returnValue: _i3.Future<List<_i4.PostDTO>>.value(<_i4.PostDTO>[]),
          )
          as _i3.Future<List<_i4.PostDTO>>);
}

/// A class which mocks [IPostsLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIPostsLocalDataSource extends _i1.Mock
    implements _i5.IPostsLocalDataSource {
  MockIPostsLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> updateLikeStatus({
    required int? postId,
    required bool? isLiked,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateLikeStatus, [], {
              #postId: postId,
              #isLiked: isLiked,
            }),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<Map<int, bool>?> getLikes(List<int>? postIds) =>
      (super.noSuchMethod(
            Invocation.method(#getLikes, [postIds]),
            returnValue: _i3.Future<Map<int, bool>?>.value(),
          )
          as _i3.Future<Map<int, bool>?>);
}
